<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ahao</groupId>
  <artifactId>KafkaProducer</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  
  <build>
	   <finalName>KafkaProducer</finalName>
	   <plugins>
	       <plugin>
	           <artifactId>maven-compiler-plugin</artifactId>
	           <configuration>
	               <source>1.7</source>
	               <target>1.7</target>
	               <encoding>UTF-8</encoding>
	           </configuration>
	       </plugin>
	       <!-- <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <port>8082</port>
                    <uriEncoding>UTF-8</uriEncoding>
                    <finalName>KafkaProducer</finalName>
                    <server>tomcat7</server>
                </configuration>
            </plugin> -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <version>1.1</version>
                <configuration>
                    <!-- <path>/wp</path> -->
                    <port>8082</port>
                    <uriEncoding>UTF-8</uriEncoding>
                    <url>http://localhost:8082/KafkaProducer</url>
                    <server>tomcat8</server>
                </configuration>
            </plugin>
	   </plugins>
	</build>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.3.0.RELEASE</version>
		</dependency>
	    <dependency>
	        <groupId>log4j</groupId>
	        <artifactId>log4j</artifactId>
	        <version>1.2.17</version>
	    </dependency>
	    <dependency>
	        <groupId>org.aspectj</groupId>
	        <artifactId>aspectjweaver</artifactId>
	        <version>1.7.4</version>
	    </dependency>
	    <!-- 这里的jackson-databind需要用高版本的，不然和Kafka所用的不兼容，
	    		会出现找不到方法的异常，这个问题在以前使用elasticsearch的时候也遇到过，
	    		elasticsearch用的jackson-databind版本需要和这个版本匹配 -->
	    <dependency>
	        <groupId>com.fasterxml.jackson.core</groupId>
	        <artifactId>jackson-databind</artifactId>
	        <version>2.9.9.1</version>
	    </dependency>
	    <dependency>
	        <groupId>com.alibaba</groupId>
	        <artifactId>fastjson</artifactId>
	        <version>1.2.83</version>
	    </dependency>
	    <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
		
	    <!-- Kafka和spring集成的支持类库，spring和kafka通信监听 -->
	    <dependency>
		    <groupId>org.springframework.integration</groupId>
		    <artifactId>spring-integration-kafka</artifactId>
		    <version>1.3.0.RELEASE</version>
		</dependency>
		<!-- kafka发送消息以及接受消息使用的类库 -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>0.10.1.0</version>
		</dependency>
		<!-- kafka自带监听器，依赖于spring，所以需要和pring-integration-kafka结合使用-->
		<dependency>
		    <groupId>org.springframework.kafka</groupId>
		    <artifactId>spring-kafka</artifactId>
		    <version>1.1.1.RELEASE</version>
		</dependency>
	</dependencies>
	
</project>